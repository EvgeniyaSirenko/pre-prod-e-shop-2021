package com.epam.preprod.sirenko;

import com.epam.preprod.sirenko.containers.CommandContainer;
import com.epam.preprod.sirenko.containers.FactoryContainer;
import com.epam.preprod.sirenko.strategy.Strategy;
import com.epam.preprod.sirenko.strategy.impl.AutoGeneratedProductCreationStrategy;
import com.epam.preprod.sirenko.strategy.impl.ManualProductCreationStrategy;
import com.epam.preprod.sirenko.util.ConsoleReader;
import com.epam.preprod.sirenko.util.PrintToConsole;
import com.epam.preprod.sirenko.util.ValidatorOfConsoleInput;

import java.io.*;

public class Demo {
	private static final String CHOOSE_STRATEGY = "To create product print 1, to autogenerate product print 0";
	private static final String INCORRECT_INPUT_ONE_OR_ZERO = "Please print only 0 or 1";
	private static CommandContainer commandContainer;
	private static ConsoleReader consoleReader = new ConsoleReader();
	
	public static void main(String[] args) throws IOException {
		FactoryContainer factoryContainer = new FactoryContainer(getStrategy());
		commandContainer = new CommandContainer(factoryContainer);
		commandContainer.getCommand("start").execute();
		while (true) {
			commandContainer.getCommand("menu").execute();
			String commandName = consoleReader.readFromConsole();
			if (commandName.equals("out")) {
				commandContainer.getCommand("out").execute();
				return;
			}
			commandContainer.getCommand(commandName).execute();
		}
	}

	private static Strategy getStrategy() throws IOException {
		PrintToConsole.printString(CHOOSE_STRATEGY);
		String inputStrategy = consoleReader.readFromConsole();
		if (!ValidatorOfConsoleInput.checkInputStringIsNumberOneOrZero(inputStrategy)) {
			inputStrategy = getInputAgainWhenIncorrectOneOrZero();
		}
		Strategy strategy;
		if (inputStrategy.matches("[1]")) {
			strategy = new ManualProductCreationStrategy();
		} else {
			strategy = new AutoGeneratedProductCreationStrategy();
		}
		return strategy;
	}
	
	private static String getInputAgainWhenIncorrectOneOrZero() throws IOException {
		String inputStrategy;
		PrintToConsole.printString(INCORRECT_INPUT_ONE_OR_ZERO);
		inputStrategy = consoleReader.readFromConsole();
		return inputStrategy;
	}
}