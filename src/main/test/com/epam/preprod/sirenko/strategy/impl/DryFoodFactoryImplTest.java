package com.epam.preprod.sirenko.strategy.impl;

import com.epam.preprod.sirenko.entity.DryFood;
import com.epam.preprod.sirenko.enums.PetGroup;
import com.epam.preprod.sirenko.strategy.ProductCreationNoReflectionStrategy;
import org.junit.jupiter.api.Test;

import java.math.BigDecimal;

import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

class DryFoodFactoryImplTest {
	
	@Test
	void createProductShouldCreateNewProduct() {
		ProductCreationNoReflectionStrategy strategy = mock(AutoGeneratedProductCreationStrategy.class);
		when(strategy.getBigDecimal()).thenReturn(BigDecimal.ONE);
		when(strategy.getStringName()).thenReturn("Name");
		when(strategy.getInt()).thenReturn(10);
		when(strategy.getStringBrandName()).thenReturn("Brand");
		when(strategy.getPetGroup()).thenReturn(PetGroup.CAT);
		DryFoodFactoryImpl dryFoodFactory = new DryFoodFactoryImpl(strategy);
		
		DryFood product = (DryFood) dryFoodFactory.createProduct();
		
		assertNotNull(product);
		assertEquals(BigDecimal.valueOf(1), product.getPrice());
		assertEquals("Name", product.getName());
		assertEquals(10, product.getWeight());
		assertEquals("Brand", product.getBrandName());
		assertEquals(PetGroup.CAT, product.getPetGroup());
	}
}