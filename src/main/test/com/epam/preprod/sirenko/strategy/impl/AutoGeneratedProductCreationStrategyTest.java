package com.epam.preprod.sirenko.strategy.impl;

import com.epam.preprod.sirenko.enums.PetGroup;
import com.epam.preprod.sirenko.enums.Season;
import com.epam.preprod.sirenko.enums.Size;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import java.math.BigDecimal;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

class AutoGeneratedProductCreationStrategyTest {
	private AutoGeneratedProductCreationStrategy autoGeneratedProduct;
	
	@BeforeEach
	public void SetData() {
		autoGeneratedProduct = mock(AutoGeneratedProductCreationStrategy.class);
	}
	
	@Test
	void getPetGroup() {
		when(autoGeneratedProduct.getPetGroup()).thenReturn(PetGroup.CAT);
		
		assertEquals(PetGroup.CAT, autoGeneratedProduct.getPetGroup());
	
	}
	
	@Test
	void getSeason() {
		when(autoGeneratedProduct.getSeason()).thenReturn(Season.WINTER);
		
		assertEquals(Season.WINTER, autoGeneratedProduct.getSeason());
	}
	
	@Test
	void getSize() {
		when(autoGeneratedProduct.getSize()).thenReturn(Size.S);
		
		assertEquals(Size.S, autoGeneratedProduct.getSize());
	}
	
	@Test
	void getStringName() {
		when(autoGeneratedProduct.getStringName()).thenReturn("Name");
		
		assertEquals("Name", autoGeneratedProduct.getStringName());
	}
	
	@Test
	void getStringBrandName() {
		when(autoGeneratedProduct.getStringBrandName()).thenReturn("Brand");
		
		assertEquals("Brand", autoGeneratedProduct.getStringBrandName());
	}
	
	@Test
	void getInt() {
		when(autoGeneratedProduct.getInt()).thenReturn(1);
		
		assertEquals(1, autoGeneratedProduct.getInt());
	}
	
	@Test
	void getBigDecimal() {
		when(autoGeneratedProduct.getBigDecimal()).thenReturn(BigDecimal.ONE);
		
		assertEquals(BigDecimal.valueOf(1), autoGeneratedProduct.getBigDecimal());
	}
}