package com.epam.preprod.sirenko.strategy.impl;

import com.epam.preprod.sirenko.entity.Clothing;
import com.epam.preprod.sirenko.enums.Season;
import com.epam.preprod.sirenko.enums.Size;
import com.epam.preprod.sirenko.strategy.ProductCreationStrategy;
import org.junit.jupiter.api.Test;

import java.math.BigDecimal;

import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.ArgumentMatchers.any;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

class ClothingFactoryImplTest {
	
	@Test
	void createProductShouldCreateNewProduct() {
		ProductCreationStrategy strategy = mock(AutoGeneratedProductCreationStrategy.class);
		when(strategy.getBigDecimal()).thenReturn(BigDecimal.ONE);
		when(strategy.getStringName()).thenReturn("Name");
		when(strategy.getSeason()).thenReturn(Season.WINTER);
		when(strategy.getSize()).thenReturn(Size.S);
		ClothingFactoryImpl clothingFactory = new ClothingFactoryImpl(strategy);
		
		Clothing product = (Clothing) clothingFactory.createProduct();
		
		assertNotNull(product);
		assertEquals(BigDecimal.valueOf(1), product.getPrice());
		assertEquals("Name", product.getName());
		assertEquals(Season.WINTER, product.getSeason());
		assertEquals(Size.S, product.getSize());
	}
}